plugins {
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'wsdl4j:wsdl4j'
    implementation 'org.glassfish.jaxb:jaxb-runtime'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api'

    jaxb 'org.glassfish.jaxb:jaxb-xjc:4.0.3'
    jaxb 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    jaxb 'org.glassfish.jaxb:jaxb-runtime:4.0.3'
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.schema = "src/main/resources/greeting.xsd"

    inputs.file schema
    outputs.dir sourcesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDir genJaxb.sourcesDir
        }
    }
}

compileJava.dependsOn genJaxb